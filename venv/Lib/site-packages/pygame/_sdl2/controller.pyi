<<<<<<< HEAD
from typing import Dict, Mapping, Optional

=======
from typing import final
>>>>>>> 705f30d050018b014a6053acce19a31da360c7ed
from pygame.joystick import JoystickType

def init() -> None: ...
def get_init() -> bool: ...
def quit() -> None: ...
<<<<<<< HEAD
def set_eventstate(state: bool) -> None: ...
def get_eventstate() -> bool: ...
def update() -> None: ...
def get_count() -> int: ...
def is_controller(index: int) -> bool: ...
def name_forindex(index: int) -> Optional[str]: ...

class Controller:
    def __init__(self, index: int) -> None: ...
    @property
    def name(self) -> str: ...
    @property
    def id(self) -> int: ...
    def init(self) -> None: ...
    def get_init(self) -> bool: ...
    def quit(self) -> None: ...
    @staticmethod
    def from_joystick(joy: JoystickType) -> Controller: ...
=======
def is_controller(device_index: int) -> bool: ...
def get_count() -> int: ...
@final
class Controller:
    def __new__(cls, device_index: int) -> Controller: ...
    def __init__(self, device_index: int) -> None: ...
    @classmethod
    def from_joystick(cls, joystick: JoystickType) -> Controller: ...
    def get_init(self) -> bool: ...
    def init(self) -> None: ...
    def quit(self) -> None: ...
    @property
    def id(self) -> int: ...
    @property
    def name(self) -> str: ...
>>>>>>> 705f30d050018b014a6053acce19a31da360c7ed
    def attached(self) -> bool: ...
    def as_joystick(self) -> JoystickType: ...
    def get_axis(self, axis: int) -> int: ...
    def get_button(self, button: int) -> bool: ...
<<<<<<< HEAD
    def get_mapping(self) -> Dict[str, str]: ...
    def set_mapping(self, mapping: Mapping[str, str]) -> int: ...
    def rumble(
        self, low_frequency: float, high_frequency: float, duration: int
    ) -> bool: ...
    def stop_rumble(self) -> None: ...
=======
    def get_mapping(self) -> dict: ...
    def set_mapping(self, mapping: dict) -> int: ...
    def rumble(self, ___) -> bool: ...
    def stop_rumble(
        self, low_frequency: float, high_frequency: float, duration: int
    ) -> bool: ...
>>>>>>> 705f30d050018b014a6053acce19a31da360c7ed
